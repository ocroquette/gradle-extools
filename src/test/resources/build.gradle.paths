// This build script is called from ExtoolsPluginExtoolsExecTest, please see there for more details

plugins {
    // We have to use the plugins DSL syntax in our tests because of TestKit, see
    // https://docs.gradle.org/4.3/userguide/test_kit.html#sub:test-kit-automatic-classpath-injection
    // "Itâ€™s important to note that the mechanism currently only works if the plugin under test is applied using
    // the plugins DSL. If the target Gradle version is prior to 2.8, automatic plugin classpath injection is
    // not performed."
    id 'com.github.ocroquette.extools'
}

import com.github.ocroquette.extools.tasks.ExtoolExec

def isWindows = ( System.getProperty("os.name").toLowerCase().contains("windows") ? true : false )

task printLocalCache(type:ExtoolExec) {
    def lazyString = "${->project.extensions.extools.configurationState.get().localCache.canonicalPath}"
    if ( ! isWindows )
        commandLine "echo", "localCache=" + lazyString
    else
        commandLine "cmd", "/c", "echo", "localCache=" + lazyString
}

task printExtractDir(type:ExtoolExec) {
    def lazyString = "${->project.extensions.extools.configurationState.get().extractDir.canonicalPath}"
    if ( ! isWindows )
        commandLine "echo", "extractDir=" + lazyString
    else
        commandLine "cmd", "/c", "echo", "extractDir=" + lazyString
}

