// This build script is called from ExtoolsPluginExtoolsExecTest, please see there for more details

plugins {
    // We have to use the plugins DSL syntax in our tests because of TestKit, see
    // https://docs.gradle.org/4.3/userguide/test_kit.html#sub:test-kit-automatic-classpath-injection
    // "Itâ€™s important to note that the mechanism currently only works if the plugin under test is applied using
    // the plugins DSL. If the target Gradle version is prior to 2.8, automatic plugin classpath injection is
    // not performed."
    id 'com.github.ocroquette.extools'
}

import com.github.ocroquette.extools.tasks.ExtoolExec

extools {
    tool "dummy_1"
    tool "dummy_2"
    tool "printenvvars"
    tool "subdir/dummy_3"
}

def isWindows = ( System.getProperty("os.name").toLowerCase().contains("windows") ? true : false )
def scriptExtension = ( isWindows ? "bat" : "sh" )

task execDummy1(type:ExtoolExec) {
    usingExtools "dummy_1", "dummy_2"

    commandLine "dummy_1.$scriptExtension"
}

task execDummy1ThenDummy2 {
    dependsOn "extoolsLoad"
    doLast {
        extoolexec {
            usingExtools "dummy_1"
            executable "dummy_1.$scriptExtension"
        }
        extoolexec {
            usingExtools "dummy_2"
            executable "dummy_2.$scriptExtension"
        }
    }
}


task execDummy2(type:ExtoolExec) {
    usingExtools "dummy_1", "dummy_2"

    commandLine "dummy_2.$scriptExtension"
}

task execPrintEnvVarsWithInvalidPath(type:ExtoolExec) {
    usingExtools "dummy_1"

    commandLine "printenvvars.$scriptExtension", "%dumpFile%"
}

task execPrintEnvVarsWithImplicitPath(type:ExtoolExec) {
    usingExtools "printenvvars"

    commandLine "printenvvars.$scriptExtension", "%dumpFile%"
}

task execToolInSubdir(type:ExtoolExec) {
    usingExtools "subdir/dummy_3"

    commandLine "dummy_3.$scriptExtension"
}

task execPrintEnvVarsWithEnvironmentVariableSingle(type:ExtoolExec) {
    usingExtools "printenvvars", "dummy_2"

    commandLine "printenvvars.$scriptExtension", "%dumpFile%"
}

task execUseAll(type:ExtoolExec) {
    commandLine "printenvvars.$scriptExtension", "%dumpFile%"
}


task execSystemCommand(type:ExtoolExec) {
    if ( isWindows ) {
        commandLine "dir.exe"
    }
    else {
        commandLine "ls"
    }
}
