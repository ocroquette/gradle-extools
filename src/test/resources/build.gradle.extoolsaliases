// This build script is called from ExtoolsPluginExtoolsExecAliasesTest, please see there for more details

plugins {
    // We have to use the plugins DSL syntax in our tests because of TestKit, see
    // https://docs.gradle.org/4.3/userguide/test_kit.html#sub:test-kit-automatic-classpath-injection
    // "Itâ€™s important to note that the mechanism currently only works if the plugin under test is applied using
    // the plugins DSL. If the target Gradle version is prior to 2.8, automatic plugin classpath injection is
    // not performed."
    id 'com.github.ocroquette.extools'
}

import com.github.ocroquette.extools.ExtoolsExec

extools {
    tools "alias_1": "dummy_1",
          "alias_2": "dummy_1"
}

def isWindows = ( System.getProperty("os.name").toLowerCase().contains("windows") ? true : false )
def scriptExtension = ( isWindows ? "bat" : "sh" )

task execDummy1(type:ExtoolsExec) {
    usingExtools "dummy_1"

    commandLine "dummy_1.$scriptExtension"
}

task execAlias1(type:ExtoolsExec) {
    usingExtools "alias_1"

    commandLine "dummy_1.$scriptExtension"
}

task execAlias2(type:ExtoolsExec) {
    usingExtools "alias_2"

    commandLine "dummy_1.$scriptExtension"
}

task accessVariable {
    dependsOn "extoolsLoad"

    doLast {
        println project.extensions.extools.getValue("alias_1", "DUMMY1_VAR")
    }
}
